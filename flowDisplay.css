body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: start;
  height: 100vh;
  background-color: var(--color-white);
}

main {
  max-width: 720px;
  width: 100%;
  padding: 1rem;
  box-sizing: border-box;
  background-color: var(--color-white);
  border: 1px solid var(--color-border-light);
  border-radius: 0.25rem;
}

.header {
  position: sticky;
  top: 0;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  gap: 0.125rem;
  background-color: var(--color-white);
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  z-index: 100;
  border-bottom: 1px solid var(--color-border-light);
}

.footer {
  position: sticky;
  bottom: 0rem;
  height: 100%;
  display: flex;
  flex-direction: column;
  gap: 0.125rem;
  background-color: var(--color-white);
  padding-top: 1rem;
  padding-bottom: 3.5rem;
  z-index: 100;
  border-top: 1px solid var(--color-border-light);
}

/* Print styling */
@media print {
  /* Hide specified elements */

  body * {
    display: none;
  }

  .hide-on-print {
    display: none;
  }

  .custom {
    justify-content: center;
    align-items: center;
    height: 900px;
  }

  .custom h3 {
    font-size: 4rem !important;
    text-align: center;
    width: 100%;
    font-weight: 400;
  }

  p {
    display: flex;
    padding: 0.25rem;
    font-size: 1rem;
    width: 100%;
  }

  main {
    display: flex;
    flex-direction: column;
    border: none;
  }

  /* Display header on each printed page */
  .header {
    display: flex;
    position: static;
    top: 0;
    left: 0;
  }

  #flowTitle {
    display: flex;
  }

  img {
    width: 100% !important;
  }

  #archived {
    display: none;
  }

  /* Each section starts on a new page */
  #log > .block {
    page-break-after: always;
    margin: 0;
  }
}

.subinfo {
  font-size: 12px;
  color: var(--color-border-dark);
  margin: 0;
}

.archive-entry h2 {
  display: block;
  width: 100%;
  /* or a fixed width like 300px if you want a specific limit */
  white-space: nowrap;
  /* Prevent text from wrapping */
  overflow: hidden;
  /* Hide overflow content */
  text-overflow: ellipsis;
  /* Display '...' when content overflows */
  font-size: 1.125rem;
  padding: 0.25rem;
  border: 1px solid transparent;
  border-radius: 0.25rem;
  cursor: default;
  font-weight: 400;
  margin: 0;
}

h1,
h2,
p {
  padding: 0.25rem;
}

.logList {
  display: flex;
  flex-direction: column;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.log-entry,
.archive-entry {
  display: flex;
  width: 100%;
  flex-direction: row;
  align-items: center;
  gap: 0.25rem;
  padding: 1rem;
  border-radius: 0.25rem;
  border: 1px solid var(--color-border-light);
  box-sizing: border-box;
  transition: all 0.3s ease;
  overflow: hidden;
}

.archive-entry {
  margin-bottom: 0.5rem;
  background-color: var(--color-white);
  color: var(--color-border-dark);
  border: 1px solid var(--color-border-dark);
}

@keyframes shrink {
  from {
    max-height: 2000px;
    opacity: 1;
  }

  to {
    max-height: 0;
    opacity: 0;
  }
}

.editing {
  display: flex;
  align-items: center;
  justify-items: center;
  color: var(--color-primary-main);
  opacity: 1;
}

.editing.remove {
  animation: shrink 0.3s ease-out forwards;
  transform-origin: top;
}

.block {
  gap: 0;
  overflow: hidden;
  max-height: 2000px;
  transition: max-height 0.3s ease-out, opacity 0.3s ease-out;
  opacity: 1;
  position: relative;
}

/* Triggering the shrink animation when an element is being removed */
.block.remove {
  animation: shrink 0.3s ease-out forwards;
  transform-origin: top;
  /* Shrink from the top */
}

.hideOnDrag {
  height: 0 !important;
  visibility: hidden !important;
  transition: height 0.3s ease, visibility 0.3s ease;
  display: none;
}

.placeholder {
  background-color: var(--color-white);
  border: dashed 2px var(--color-border-light);
  width: 100%;
  transition: height 0.3s ease;
}

.log-entry img,
.log-entry p,
.log-entry button {
  transition: height 0.3s ease, visibility 0.3s ease;
}

img {
  width: 100%;
  height: auto;
  display: block;
  margin-top: 5px;
  border-radius: 0.125rem;
}

.container {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.content {
  font-size: 16px;
}

.subInfo {
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
}

.group {
  gap: 0.125rem;
  display: flex;
  flex-direction: column;
}

.help {
  flex-direction: row;
  align-items: center;
}

/* Draggable styling */
.container.draggable {
  cursor: grab;
  opacity: 0.5;
  transform: translateX(32px);
  width: 96%;
}

/* Archived section */
#archived {
  margin-top: 2rem;
}

.hidden {
  display: none;
}

/* Edit mode styling */
.editable {
  border: 1px dashed var(--color-border-light);
  border-radius: 0.25rem;
  cursor: text;
}

.addEntryContainer {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 0.5rem;
  border: 0;
  opacity: 0;
  transition: height 0.5s ease, opacity 0.5s ease;
  overflow: hidden;
  position: relative;
}

.addEntryContainer.canAdd:hover {
  height: 3rem;
  opacity: 1;
}

.growNewEntry {
  height: 132px !important;
}

button svg {
  height: 1rem;
  width: 1rem;
  color: inherit;
  /* Inherit the text color of the button */
  fill: currentColor;
  display: block;
}

.action,
.addEntry {
  position: absolute;
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  height: 2rem;
  width: fit-content;
}

span {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

/* The switch - the outer container */
.switch {
  position: relative;
  display: inline-block;
  width: 6rem;
  height: 2rem;
}

/* Hide the default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--color-border-light);
  transition: 0.4s;
}

/* The circle inside the slider */
.slider:before {
  position: absolute;
  content: "";
  height: 1.5rem;
  width: 1.5rem;
  left: 4px;
  bottom: 4px;
  background-color: var(--color-white);
  transition: 0.4s;
  z-index: 2;
}

/* When the checkbox is checked, move the slider */
input:checked + .slider {
  background-color: var(--color-primary-main);
}

/* Move the circle when checked */
input:checked + .slider:before {
  transform: translateX(4rem);
}

/* Rounded slider */
.slider.round {
  border-radius: 1rem;
}

.slider.round:before {
  border-radius: 50%;
}

.toggle-label {
  position: absolute;
  font-size: 0.8rem;
  top: 50%;
  left: 38px;
  transform: translateY(-50%);
  z-index: 1;
  transition: 0.4s;
}

.toggle-label.right {
  left: 16px;
  color: var(--color-white);
}

.view-icon,
.edit-icon {
  position: absolute;
  font-size: 0.8rem;
  top: 50%;
  transform: translateY(-50%);
  z-index: 3;
  opacity: 0;
  width: 0.95rem;
  height: 0.95rem;
  transition: 0.4s;
}

input:checked + .slider .edit-icon {
  opacity: 1;
  transform: translate(2rem, -0.5rem);
}

input:not(:checked) + .slider .view-icon {
  opacity: 1;
  transform: translate(-2rem, -0.45rem);
}
